! 2 Pole Permanent Magnet Synchronous Motor (PMSM)
! Simulation type: Transient Simulation 
! Power Source: Three phase voltage source via circuit definition
! Author: Jonathan Velasco
! Original date: September 2024
!------------------------------------------------------
Check Keywords "Warn"
!---------------------------------------------------------
!MESH DATA  
!---------------------------------------------------------
Header
  Mesh DB "." "PMSM_2POLE"
End
!---------------------------------------------------------


!---------------------------------------------------------
! Rotating machine parameters
!---------------------------------------------------------
$ rpm = 9549.3                 ! Rotational speed (1/min)
$ WM = 2*pi*rpm/60             ! Mechanical Frequency [rad/s]
$ PP = 1                       ! Pole pairs
$ DegreesPerSec = WM*180.0/pi  !
$ RotorInitPos = 0             ! Initial Rotor Position
$ f = rpm/60*PP                ! Electrical frequency (Hz)
$ we = 2*pi*f                  ! Electrical frequency in rad/s
$ rot_dir = 1 ! Direction of rotation. 1: CCW, -1: CW
$ Mangle1 = 45.0     ! Magnetization Angle [deg]

! ------------------------------------
! Permanent Magnet information
! Recoma 26HE
! ------------------------------------
$ Br = 1.07 ! [T]
$ M_PM = Br/4*pi*1e-7 ! Magnetization Vector's Amplitude in A/m

! ---------------------------------
! Time discretization parameters
! ---------------------------------
$ stepsPerPeriod = 20
$ Periods = 100
$ nSteps = Periods*stepsPerPeriod
$ stepSize = (Periods/f)/nSteps

!---------------------------------------------------------
!SIMULATION CONFIGURATION 
!---------------------------------------------------------

Simulation
  Max Output Level = 4
  Coordinate System = Cartesian 2D
  Coordinate Scaling = 1.0
  Simulation Type = Transient
  Timestepping Method = BDF
  BDF Order = 2
  Timestep Sizes = $ stepSize
  Timestep Intervals = $ nSteps
  Use Mesh Names = Logical True
End
!---------------------------------------------------------

Constants
  Permittivity of Vacuum = 8.8542e-12
  Permeability of Vacuum = 1.256e-6
End

!---------------------------------------------------------

Body 1
  Name = stator
  Material = 2
  Equation = 1
End

Body 2
  Name = rotor
  Material = 2
  Equation = 1
  Body Force = 2
  Torque Groups(1) = Integer 1
End

Body 3
  Name = winding_a_plus
  Material = 1
  Equation = 1
  Body Force = 1
End

Body 4
  Name = winding_a_minus
  Material = 1
  Equation = 1
  Body Force = 1
End

Body 5
  Name = winding_b_minus
  Material = 1
  Equation = 1
  Body Force = 1
End

Body 6
  Name = winding_c_minus
  Material = 1
  Equation = 1
  Body Force = 1
End

Body 7
  Name = winding_b_plus
  Material = 1
  Equation = 1
  Body Force = 1
End

Body 8
  Name = winding_c_plus
  Material = 1
  Equation = 1
  Body Force = 1
End

Body 9
  Name = stator_air
  Material = 1
  Equation = 1
End

Body 10
  Name = rotor_air
  Material = 1
  Equation = 1
  Body Force = 2
  !Torque Groups = Integer 1

  ! Torque Calculation Method 1:
  ! Arkkio's Method
  ! Only valid in uniform airgap models
  r inner = Real 0.037
  r outer = Real 0.046
End

Body 11
  Name = magnet_P ! In this model this is just air as part of the rotor airgap
  Material = 3
  Equation = 1
  Body Force = 2
  Torque Groups(1) = Integer 1
End

Body 12
  Name = magnet_N ! In this model this is just air as part of the rotor airgap
  Material = 3
  Equation = 1
  Body Force = 2
  Torque Groups(1) = Integer 1
End

!---------------------------------------------------------
! Boundary conditions
!---------------------------------------------------------

Boundary Condition 1
  Name = Infinity
  A = Real 0
End

Boundary Condition 2
  Name = Stator_side_Mortar_Boundary
End

Boundary Condition 3
  Name = Rotor_side_Mortar_Boundary
  Mortar BC Static = Logical True
  Rotational Projector = Logical True
  Galerkin Projector = Logical True
 
  Mortar BC = Integer 2
End


!---------------------------------------------------------
!Sources (Coming from circuit definition)
!---------------------------------------------------------

! Body Force 1 is defined within the circuit definition
! All circuits should always be under Body Force 1
Include "circuits/transient_2d_stranded_3ph_voltage_source.definition"

Body Force 2
! Rotor rotation
  Mesh Rotate 3 = Variable "time", "timestep size"
     Real MATC "RotorInitPos+rot_dir*(tx(0)-tx(1))*DegreesPerSec"

End 


! Torque Calculation Method 2:
! Rotor Component for torque calculation using
! the sum of nodal forces in rotating domains
! The postprocessing quantity is obtained via the CalcFields Solver
! Note: Components 1-6 are under the circuit definitions.

Component 7
  Name = String "Rotating_Domains"
  Master Bodies(3) = Integer 2 11 12
  Calculate Magnetic Torque = Logical true
End


!---------------------------------------------------------
! Material Properties 
!---------------------------------------------------------

Material 1
  Name = "Air"
  Electric Conductivity = 1.0
  Relative Permittivity = 1.0
  Relative Permeability = 1.0
End

Material 2
  Name = "M19_29G Steel"
  Include "materials/steel_m19_29"
End

Material 3
	Name = "PM_1"
	Relative Permeability = Real 1.05
	Magnetization 1 = Variable time, timestep size
		Real MATC  "M_PM*cos(rot_dir*WM*(tx(0)-tx(1)) + (RotorInitPos + Mangle1)*pi/180)"
	Magnetization 2 = Variable time, timestep size
		Real MATC "M_PM*sin(rot_dir*WM*(tx(0)-tx(1)) + (RotorInitPos + Mangle1)*pi/180)"
End

!---------------------------------------------------------
! Solver Configuration
!---------------------------------------------------------

Equation 1
  Active Solvers(7) = 1 2 3 4 5 6 7
End

Solver 1
	Exec Solver = Before Timestep
	Equation = MeshDeform
	Procedure = "RigidMeshMapper" "RigidMeshMapper"
	
	!Rotor Mode = Logical True
	!Rotor Bodies(4) = Integer 2 10 11 12
End


Solver 2
  Exec Solver = Always
  Equation = Circuits
  Variable = X
  No Matrix = Logical True  
  Procedure = "CircuitsAndDynamics" "CircuitsAndDynamics"
End


Solver 3
  Equation = MgDyn2D
  Variable = A
  Procedure = "MagnetoDynamics2D" "MagnetoDynamics2D"
  
  !Linear System Solver = Direct
  !Linear System Direct Method = MUMPS

  Steady State Convergence Tolerance = 1e-6
  Linear System Convergence Tolerance = 1e-6
  Linear System Iterative Method = BiCGStabl
  Linear System Max Iterations = 5000
  Linear System Solver = Iterative
  Linear System Symmetric = True
  Linear System Residual Output = 1
  Linear System Preconditioning = Circuit
  Linear System Precondition Recompute = 1
  Linear System Abort Not Converged = False
  ! Needed for strong coupling with circuits
  Export Lagrange Multiplier = True

  ! For projection: Stator/Rotor
 Apply Mortar BCs = Logical True

End 

Solver 4
  Equation = CalcFields
  Procedure = "MagnetoDynamics" "MagnetoDynamicsCalcFields"
  Linear System Solver = Direct
  Calculate Current Density = Logical True 
  Calculate Magnetic Vector Potential = Logical True
  Calculate Nodal Fields     = Logical True
  Calculate Elemental Fields = Logical False 
  Calculate Nodal Forces = Logical True
End


Solver 5
  Equation = "ResultOutput"
  Procedure = "ResultOutputSolve" "ResultOutputSolver"
  Exec Solver = after saving 
  Output File Name = PMSM_2POLE_TRANSIENT
  Output Directory = res
  Save Geometry Ids = Logical True
  Vtu Format = Logical True
End 

Solver 6
   Equation = Circuits Output
   Procedure = "CircuitsAndDynamics" "CircuitsOutput"
End

Solver 7
   Exec Solver = After Timestep
   Procedure = "SaveData" "SaveScalars"
   Filename = res/w1.dat
   Save Component Results = True 
   Variable 1 = time
End




